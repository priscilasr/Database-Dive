/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */




import java.sql.*;
import java.util.Scanner;
import javax.swing.JOptionPane;
import java.util.Vector;
//import java.sql.DriverManager;

public class ContentViewer extends javax.swing.JFrame {
    
    /** Creates new form Antenna */
    public ContentViewer() {
        
        initComponents();
        name.setText("  titanic {float: none;}");
        TextName.setText("Content Viewer");
        DatesButton.setVisible(false);
        StartButton.setVisible(false);
        EndButton.setVisible(false);
        
        
    }
    
    Scanner Maya = new Scanner(System.in);
    
    boolean trending = false;
    boolean history = false;
    String customerID = "";
    
    
    
    
   
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jPanel2 = new javax.swing.JPanel();
        Recommended = new javax.swing.JButton();
        GenreButton = new javax.swing.JButton();
        TrendingBotton = new javax.swing.JButton();
        getUser = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        historyButton = new javax.swing.JButton();
        viewerschoicebutton = new javax.swing.JButton();
        ViewerBewareButton = new javax.swing.JButton();
        TrendingBotton1 = new javax.swing.JButton();
        EndButton = new javax.swing.JTextField();
        StartButton = new javax.swing.JTextField();
        TextName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Result = new javax.swing.JTextArea();
        DatesButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        GetUser = new javax.swing.JTextField();
        HomeButton6 = new javax.swing.JButton();
        name = new javax.swing.JTextField();

        jScrollPane1.setViewportView(jEditorPane1);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jPanel2.setBackground(new java.awt.Color(0, 0, 204));

        Recommended.setText("RECOMMENDED");

        GenreButton.setText("GENRE");
        GenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenreButtonActionPerformed(evt);
            }
        });

        TrendingBotton.setText("TRENDING");
        TrendingBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrendingBottonActionPerformed(evt);
            }
        });

        getUser.setBackground(new java.awt.Color(17, 23, 64));
        getUser.setForeground(new java.awt.Color(149, 152, 207));
        getUser.setText(" Search");
        getUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Recommended, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TrendingBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(getUser, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Recommended)
                    .addComponent(GenreButton)
                    .addComponent(TrendingBotton)
                    .addComponent(getUser, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Antenna");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(739, 423));
        jPanel3.setMinimumSize(new java.awt.Dimension(739, 423));

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(153, 299));

        historyButton.setText("HISTORY");
        historyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyButtonActionPerformed(evt);
            }
        });

        viewerschoicebutton.setText("VIEWER'S CHOICE");
        viewerschoicebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewerschoicebuttonActionPerformed(evt);
            }
        });

        ViewerBewareButton.setText("VIEWER BEWARE");
        ViewerBewareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewerBewareButtonActionPerformed(evt);
            }
        });

        TrendingBotton1.setText("TRENDING");
        TrendingBotton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrendingBotton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewerschoicebutton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(historyButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewerBewareButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrendingBotton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(TrendingBotton1)
                .addGap(53, 53, 53)
                .addComponent(historyButton)
                .addGap(53, 53, 53)
                .addComponent(viewerschoicebutton)
                .addGap(53, 53, 53)
                .addComponent(ViewerBewareButton)
                .addGap(35, 35, 35))
        );

        EndButton.setBackground(new java.awt.Color(204, 204, 204));
        EndButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndButtonActionPerformed(evt);
            }
        });

        StartButton.setBackground(new java.awt.Color(204, 204, 204));
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        TextName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TextName.setBorder(null);
        TextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNameActionPerformed(evt);
            }
        });

        Result.setColumns(20);
        Result.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        Result.setRows(5);
        Result.setAlignmentX(2.0F);
        Result.setAlignmentY(2.0F);
        Result.setBorder(null);
        jScrollPane2.setViewportView(Result);

        DatesButton.setBackground(new java.awt.Color(255, 255, 255));
        DatesButton.setText("Dates");
        DatesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatesButtonActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(0, 0, 204));

        GetUser.setBackground(new java.awt.Color(204, 204, 204));
        GetUser.setText("Costumer ID");
        GetUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetUserActionPerformed(evt);
            }
        });

        HomeButton6.setText("HOME");
        HomeButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButton6ActionPerformed(evt);
            }
        });

        name.setBackground(new java.awt.Color(0, 0, 204));
        name.setFont(new java.awt.Font("Trebuchet MS", 3, 14)); // NOI18N
        name.setForeground(new java.awt.Color(102, 204, 255));
        name.setText("titanic {float: none;} ");
        name.setBorder(null);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(HomeButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(126, 126, 126)
                .addComponent(GetUser, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GetUser, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HomeButton6))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DatesButton)
                                        .addGap(103, 103, 103)))))))
                .addGap(15, 15, 15))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(DatesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenreButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenreButtonActionPerformed

    private void TrendingBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrendingBottonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

    }//GEN-LAST:event_TrendingBottonActionPerformed

    private void getUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getUserActionPerformed

    private void TrendingBotton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrendingBotton1ActionPerformed
        // TODO add your handling code here:
        trending = true;
        history = false;
        // TODO add your handling code here:
        Result.setText(" ");
        TextName.setText("Top 10 Trending Content");
        StartButton.setVisible(true);
        EndButton.setVisible(true);
        DatesButton.setVisible(true);
       

        Connection conn = null;
        String teamNumber = "1";
        String sectionNumber = "914";
        String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
        String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
        String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
        String userPassword = "PZKNJ123";
        //Building the connection

        try{
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }//end try catch

        Vector<String> vector = new Vector<>();

        String titleid = "";
        try{
            //create a statement object
            Statement stmt = conn.createStatement();

            //create an SQL statement
            String sqlStatement = "SELECT titleid,\n COUNT(customerid)\nFROM ratings\nGROUP BY titleid\nORDER BY COUNT(customerid) DESC\nFETCH FIRST 10 ROWS ONLY;";

            //send statement to DBMS
            ResultSet result1 = stmt.executeQuery(sqlStatement);

            //OUTPUT

            //System.out.println("______________________________________");
            while (result1.next()) {
                //System.out.println(result.getString("cus_lname"));

                titleid += result1.getString("titleid")+"\n";
                vector.add(result1.getString("titleid"));



            }

        }
        catch(Exception e){
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            //System.exit(0);
        }

        String originaltitle = "";

        String sqlStatement = "";
        for(int i = 0; i < vector.size(); i++){
            sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    originaltitle += result1.getString("originaltitle")+"\n";



                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }

        }
        Result.setText(originaltitle);

        

       

        
    }//GEN-LAST:event_TrendingBotton1ActionPerformed

    private void EndButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndButtonActionPerformed

    private void historyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyButtonActionPerformed

        // TODO add your handling code here:
        trending = false;
        history = true;
        Result.setText(" ");
        customerID = GetUser.getText();
        StartButton.setVisible(true);
        EndButton.setVisible(true);
        DatesButton.setVisible(true);
        
        
             
        TextName.setText("Watch History");
        
       
            
        Connection conn = null;
        String teamNumber = "1";
        String sectionNumber = "914";
        String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
        String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
        String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
        String userPassword = "PZKNJ123";
        //Building the connection

        try{
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }//end try catch

        Vector<String> vector = new Vector<>();

        String titleid = "";
        try{
            //create a statement object
            Statement stmt = conn.createStatement();

            //create an SQL statement
            String sqlStatement = "SELECT titleid FROM ratings WHERE customerid = '" + customerID + "';";

            //send statement to DBMS
            ResultSet result1 = stmt.executeQuery(sqlStatement);

            //OUTPUT

            //System.out.println("______________________________________");
            while (result1.next()) {
                //System.out.println(result.getString("cus_lname"));

                titleid += result1.getString("titleid")+"\n";
                vector.add(result1.getString("titleid"));




            }

        }
        catch(Exception e){
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            //System.exit(0);
        }

        String originaltitle = "";

        String sqlStatement = "";
        for(int i = 0; i < vector.size(); i++){
            sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    originaltitle += result1.getString("originaltitle")+"\n";



                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }

        }
        Result.setText(originaltitle);
        
        
        
    }//GEN-LAST:event_historyButtonActionPerformed

    private void TextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNameActionPerformed

    private void DatesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatesButtonActionPerformed
        // TODO add your handling code here:
        
        
        if(history){
            String startdate = StartButton.getText();
            String enddate = EndButton.getText();
            
            Connection conn = null;
            String teamNumber = "1";
            String sectionNumber = "914";
            String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
            String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
            String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
            String userPassword = "PZKNJ123";
            //Building the connection

            try{
                Class.forName("org.postgresql.Driver");
                conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
            } catch (Exception e) {
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                System.exit(0);
            }//end try catch

            Vector<String> vector = new Vector<>();

            String titleid = "";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement
                String sqlStatement = "SELECT titleid FROM ratings\nWHERE date BETWEEN '" + startdate + "' AND '" + enddate + "'\nAND ratings.customerid = '" + customerID + "';";               

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    titleid += result1.getString("titleid")+"\n";
                    vector.add(result1.getString("titleid"));

                    //originaltitle += result2.getString("originaltitle")+"\n";
                    //System.err.println(result2.getString("originaltitle"));
                    /*

                    Statement stmt1 = conn.createStatement();
                    result2 = stmt1.executeQuery(sqlStatement);
                    //System.err.println(result2.getString("originaltitle"));
                    originaltitle = result2.getString("originaltitle")+"\n";
                    */

                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }
            
            String originaltitle = "";

            String sqlStatement = "";
            for(int i = 0; i < vector.size(); i++){
                sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
                try{
                    //create a statement object
                    Statement stmt = conn.createStatement();

                    //create an SQL statement

                    //send statement to DBMS
                    ResultSet result1 = stmt.executeQuery(sqlStatement);

                    //OUTPUT

                    //System.out.println("______________________________________");
                    while (result1.next()) {
                        //System.out.println(result.getString("cus_lname"));

                        originaltitle += result1.getString("originaltitle")+"\n";

                        //originaltitle += result2.getString("originaltitle")+"\n";
                        //System.err.println(result2.getString("originaltitle"));
                        /*

                        Statement stmt1 = conn.createStatement();
                        result2 = stmt1.executeQuery(sqlStatement);
                        //System.err.println(result2.getString("originaltitle"));
                        originaltitle = result2.getString("originaltitle")+"\n";
                        */

                    }

                }
                catch(Exception e){
                    e.printStackTrace();
                    System.err.println(e.getClass().getName()+": "+e.getMessage());
                    //System.exit(0);
                }

            }
            
            
            Result.setText(originaltitle);
            
            
        }
        
        if(trending){
            String startdate = StartButton.getText();
            String enddate = EndButton.getText();
            
            Connection conn = null;
            String teamNumber = "1";
            String sectionNumber = "914";
            String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
            String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
            String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
            String userPassword = "PZKNJ123";
            //Building the connection

            try{
                Class.forName("org.postgresql.Driver");
                conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
            } catch (Exception e) {
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                System.exit(0);
            }//end try catch

            Vector<String> vector = new Vector<>();

            String titleid = "";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement
                String sqlStatement = "SELECT titleid,\nCOUNT(customerid)\nFROM ratings\nWHERE date BETWEEN '" + startdate + "' AND '" + enddate + "'\nGROUP BY titleid\nORDER BY COUNT(customerid) DESC\nFETCH FIRST 10 ROWS ONLY;";               

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    titleid += result1.getString("titleid")+"\n";
                    vector.add(result1.getString("titleid"));

                    //originaltitle += result2.getString("originaltitle")+"\n";
                    //System.err.println(result2.getString("originaltitle"));
                    /*

                    Statement stmt1 = conn.createStatement();
                    result2 = stmt1.executeQuery(sqlStatement);
                    //System.err.println(result2.getString("originaltitle"));
                    originaltitle = result2.getString("originaltitle")+"\n";
                    */

                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }
            
            String originaltitle = "";

            String sqlStatement = "";
            for(int i = 0; i < vector.size(); i++){
                sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
                try{
                    //create a statement object
                    Statement stmt = conn.createStatement();

                    //create an SQL statement

                    //send statement to DBMS
                    ResultSet result1 = stmt.executeQuery(sqlStatement);

                    //OUTPUT

                    //System.out.println("______________________________________");
                    while (result1.next()) {
                        //System.out.println(result.getString("cus_lname"));

                        originaltitle += result1.getString("originaltitle")+"\n";

                        //originaltitle += result2.getString("originaltitle")+"\n";
                        //System.err.println(result2.getString("originaltitle"));
                        /*

                        Statement stmt1 = conn.createStatement();
                        result2 = stmt1.executeQuery(sqlStatement);
                        //System.err.println(result2.getString("originaltitle"));
                        originaltitle = result2.getString("originaltitle")+"\n";
                        */

                    }

                }
                catch(Exception e){
                    e.printStackTrace();
                    System.err.println(e.getClass().getName()+": "+e.getMessage());
                    //System.exit(0);
                }

            }
            
            
            Result.setText(originaltitle);
            
           
        }
        
        
        
    }//GEN-LAST:event_DatesButtonActionPerformed

    private void viewerschoicebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewerschoicebuttonActionPerformed
        // TODO add your handling code here:
        
        Result.setText(" ");
        TextName.setText("Top 10 Viewer's Choice");
        StartButton.setVisible(false);
        EndButton.setVisible(false);
        DatesButton.setVisible(false);
        
        
        Connection conn = null;
        String teamNumber = "1";
        String sectionNumber = "914";
        String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
        String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
        String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
        String userPassword = "PZKNJ123";
        //Building the connection

        try{
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }//end try catch

        Vector<String> vector = new Vector<>();

        String titleid = "";
        try{
            //create a statement object
            Statement stmt = conn.createStatement();

            //create an SQL statement
            String sqlStatement = "SELECT titleid from RF\nFETCH FIRST 10 ROWS ONLY;";

            //send statement to DBMS
            ResultSet result1 = stmt.executeQuery(sqlStatement);

            //OUTPUT

            //System.out.println("______________________________________");
            while (result1.next()) {
                //System.out.println(result.getString("cus_lname"));

                titleid += result1.getString("titleid")+"\n";
                vector.add(result1.getString("titleid"));




            }

        }
        catch(Exception e){
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            //System.exit(0);
        }

        String originaltitle = "";

        String sqlStatement = "";
        for(int i = 0; i < vector.size(); i++){
            sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    originaltitle += result1.getString("originaltitle")+"\n";



                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }

        }
        Result.setText(originaltitle);
        
        
    }//GEN-LAST:event_viewerschoicebuttonActionPerformed

    private void ViewerBewareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewerBewareButtonActionPerformed
        // TODO add your handling code here:
        Result.setText(" ");
        TextName.setText("Top 10 Viewer Beware");
        StartButton.setVisible(false);
        EndButton.setVisible(false);
        DatesButton.setVisible(false);
        

        Connection conn = null;
        String teamNumber = "1";
        String sectionNumber = "914";
        String dbName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "db";
        String dbConnectionString = "jdbc:postgresql://csce-315-db.engr.tamu.edu/" + dbName;
        String userName = "csce315" + "_" + sectionNumber + "_" + teamNumber + "_" + "user";
        String userPassword = "PZKNJ123";
        //Building the connection

        try{
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection(dbConnectionString,userName, userPassword);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }//end try catch

        Vector<String> vector = new Vector<>();

        String titleid = "";
        try{
            //create a statement object
            Statement stmt = conn.createStatement();

            //create an SQL statement
            String sqlStatement = "SELECT titleid,\nCOUNT(customerid), rating\nFROM ratings\nWHERE rating < 3\nGROUP BY titleid, rating\nORDER BY COUNT(customerid) DESC, rating\nFETCH FIRST 10 ROWS ONLY;";               

            //send statement to DBMS
            ResultSet result1 = stmt.executeQuery(sqlStatement);

            //OUTPUT

            //System.out.println("______________________________________");
            while (result1.next()) {
                //System.out.println(result.getString("cus_lname"));

                titleid += result1.getString("titleid")+"\n";
                vector.add(result1.getString("titleid"));

                //originaltitle += result2.getString("originaltitle")+"\n";
                //System.err.println(result2.getString("originaltitle"));
                /*

                Statement stmt1 = conn.createStatement();
                result2 = stmt1.executeQuery(sqlStatement);
                //System.err.println(result2.getString("originaltitle"));
                originaltitle = result2.getString("originaltitle")+"\n";
                */

            }

        }
        catch(Exception e){
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            //System.exit(0);
        }

        String originaltitle = "";

        String sqlStatement = "";
        for(int i = 0; i < vector.size(); i++){
            sqlStatement = "SELECT originaltitle FROM content_management WHERE titleid = '" + vector.get(i) + "';";
            try{
                //create a statement object
                Statement stmt = conn.createStatement();

                //create an SQL statement

                //send statement to DBMS
                ResultSet result1 = stmt.executeQuery(sqlStatement);

                //OUTPUT

                //System.out.println("______________________________________");
                while (result1.next()) {
                    //System.out.println(result.getString("cus_lname"));

                    originaltitle += result1.getString("originaltitle")+"\n";

                    //originaltitle += result2.getString("originaltitle")+"\n";
                    //System.err.println(result2.getString("originaltitle"));
                    /*

                    Statement stmt1 = conn.createStatement();
                    result2 = stmt1.executeQuery(sqlStatement);
                    //System.err.println(result2.getString("originaltitle"));
                    originaltitle = result2.getString("originaltitle")+"\n";
                    */

                }

            }
            catch(Exception e){
                e.printStackTrace();
                System.err.println(e.getClass().getName()+": "+e.getMessage());
                //System.exit(0);
            }

        }


        Result.setText(originaltitle);
       
    }//GEN-LAST:event_ViewerBewareButtonActionPerformed

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartButtonActionPerformed

    private void GetUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetUserActionPerformed
        // TODO add your handling code here:
        GetUser.setText("");
    }//GEN-LAST:event_GetUserActionPerformed

    private void HomeButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        jdbcpostgreSQLGUI obj = new jdbcpostgreSQLGUI();
        obj.setVisible(true);
    }//GEN-LAST:event_HomeButton6ActionPerformed

    
  
    
    
    
    
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContentViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContentViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContentViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContentViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        
        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContentViewer().setVisible(true);
            }
        });
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DatesButton;
    private javax.swing.JTextField EndButton;
    private javax.swing.JButton GenreButton;
    private javax.swing.JTextField GetUser;
    private javax.swing.JTextField GetUser1;
    private javax.swing.JTextField GetUser2;
    private javax.swing.JTextField GetUser3;
    private javax.swing.JTextField GetUser4;
    private javax.swing.JTextField GetUser5;
    private javax.swing.JButton HomeButton1;
    private javax.swing.JButton HomeButton2;
    private javax.swing.JButton HomeButton3;
    private javax.swing.JButton HomeButton4;
    private javax.swing.JButton HomeButton5;
    private javax.swing.JButton HomeButton6;
    private javax.swing.JButton Recommended;
    private javax.swing.JTextArea Result;
    private javax.swing.JTextField StartButton;
    private javax.swing.JTextField TextName;
    private javax.swing.JButton TrendingBotton;
    private javax.swing.JButton TrendingBotton1;
    private javax.swing.JButton ViewerBewareButton;
    private javax.swing.JTextField getUser;
    private javax.swing.JButton historyButton;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField name;
    private javax.swing.JButton viewerschoicebutton;
    // End of variables declaration//GEN-END:variables
    
}
